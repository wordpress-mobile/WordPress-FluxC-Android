# Nodes with values to reuse in the pipeline.
common_params:
  # Common plugin settings to use with the `plugins` key.
  - &common_plugins
    - automattic/a8c-ci-toolkit#2.15.0
  # Common artifact paths used across steps
  - &artifact_paths
    - "**/build/test-results/**/*"
    - "**/build/reports/**/*"

agents:
  queue: "android"

steps:
  ############################
  # Gradle Wrapper Validation
  ############################
  - label: "Gradle Wrapper Validation"
    command: |
      validate_gradle_wrapper
    plugins: *common_plugins
    notify:
      - github_commit_status:
          context: "Gradle Wrapper Validation"

  # Wait for Gradle Wrapper to be validated before running any other jobs
  - wait

  ############################
  # Linters
  ############################
  - group: "🕵️ Linters"
    key: all-linters
    steps:
      - label: "🕵️ checkstyle"
        command: |
          cp gradle.properties-example gradle.properties && cp -a example/properties-example/ example/properties/
          ./gradlew checkstyle
        artifact_paths: *artifact_paths
        plugins: *common_plugins
        notify:
          - github_commit_status:
              context: "checkstyle"

      - label: "🕵️ detekt"
        command: |
          cp gradle.properties-example gradle.properties && cp -a example/properties-example/ example/properties/
          ./gradlew detekt
        artifact_paths: *artifact_paths
        plugins: *common_plugins
        notify:
          - github_commit_status:
              context: "detekt"

      - label: "🕵️ Lint"
        command: |
          cp gradle.properties-example gradle.properties && cp -a example/properties-example/ example/properties/
          ./gradlew lintRelease || (grep -A20 -B2 'severity="Error"' */build/**/*.xml; exit 1);
          find . -iname "*XMLRPCClient*java" | xargs grep getSiteId && (echo "You should not use _getSiteId_ in a XMLRPClient, did you mean _selfHostedId_?" && exit 1) || exit 0;
        artifact_paths: *artifact_paths
        plugins: *common_plugins
        notify:
          - github_commit_status:
              context: "Lint"

  ############################
  # Unit Tests
  ############################
  - group: 🔬 Unit Tests
    key: all-unit-tests
    steps:
      - label: "🔬 Unit Test"
        command: .buildkite/unit-tests.sh
        artifact_paths: *artifact_paths
        plugins: *common_plugins
        notify:
          - github_commit_status:
              context: "Unit Test"

      - label: "🔬 WooCommerce Tests"
        command: .buildkite/woocommerce-tests.sh
        artifact_paths: *artifact_paths
        plugins: *common_plugins
        notify:
          - github_commit_status:
              context: "WooCommerce Tests"

  ############################
  # Connected Tests
  ############################
  - label: "🔬 Build Connected Tests"
    key: connected-tests
    command: .buildkite/connected-tests.sh
    artifact_paths: *artifact_paths
    plugins: *common_plugins
    notify:
      - github_commit_status:
          context: "Publish :fluxc-build-connected-tests"

  - wait: ~
    if: build.branch == "trunk" || build.tag != null

  ############################
  # Publish artefacts to S3
  ############################
  - group: 🚀 Publish to S3
    key: publish-to-s3
    steps:
      - label: "🚀 Publish :fluxc-annotations"
        key: "publish-fluxc-annotations"
        command: .buildkite/publish-fluxc-annotations.sh
        plugins: *common_plugins
        notify:
          - github_commit_status:
              context: "Publish :fluxc-annotations"

      - label: "🚀 Publish :fluxc-processor"
        key: "publish-fluxc-processor"
        depends_on:
          - "publish-fluxc-annotations"
        command: .buildkite/publish-fluxc-processor.sh
        plugins: *common_plugins
        notify:
          - github_commit_status:
              context: "Publish :fluxc-processor"

      - label: "🚀 Publish :fluxc"
        key: "publish-fluxc"
        depends_on:
          - "publish-fluxc-processor"
          - "publish-fluxc-annotations"
        command: .buildkite/publish-fluxc.sh
        plugins: *common_plugins
        notify:
          - github_commit_status:
              context: "Publish :fluxc"

      - label: "🚀 Publish :plugins:woocommerce"
        key: "publish-plugins-woocommerce"
        depends_on:
          - "publish-fluxc-processor"
          - "publish-fluxc-annotations"
          - "publish-fluxc"
        command: .buildkite/publish-plugins-woocommerce.sh
        plugins: *common_plugins
        notify:
        - github_commit_status:
            context: "Publish :plugins:woocommerce"
