{
  "formatVersion": 1,
  "database": {
    "version": 25,
    "identityHash": "6d6c9173ad3574359b4e0f4788c9541e",
    "entities": [
      {
        "tableName": "AddonEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`addonLocalId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `globalGroupLocalId` INTEGER, `productRemoteId` INTEGER, `localSiteId` INTEGER, `type` TEXT NOT NULL, `display` TEXT, `name` TEXT NOT NULL, `titleFormat` TEXT NOT NULL, `description` TEXT, `required` INTEGER NOT NULL, `position` INTEGER NOT NULL, `restrictions` TEXT, `priceType` TEXT, `price` TEXT, `min` INTEGER, `max` INTEGER, FOREIGN KEY(`globalGroupLocalId`) REFERENCES `GlobalAddonGroupEntity`(`globalGroupLocalId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "addonLocalId",
            "columnName": "addonLocalId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "globalGroupLocalId",
            "columnName": "globalGroupLocalId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "productRemoteId",
            "columnName": "productRemoteId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "localSiteId",
            "columnName": "localSiteId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "display",
            "columnName": "display",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "titleFormat",
            "columnName": "titleFormat",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "required",
            "columnName": "required",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "restrictions",
            "columnName": "restrictions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "priceType",
            "columnName": "priceType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "price",
            "columnName": "price",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "min",
            "columnName": "min",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "max",
            "columnName": "max",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "addonLocalId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_AddonEntity_globalGroupLocalId",
            "unique": false,
            "columnNames": [
              "globalGroupLocalId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AddonEntity_globalGroupLocalId` ON `${TABLE_NAME}` (`globalGroupLocalId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "GlobalAddonGroupEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "globalGroupLocalId"
            ],
            "referencedColumns": [
              "globalGroupLocalId"
            ]
          }
        ]
      },
      {
        "tableName": "AddonOptionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`addonOptionLocalId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `addonLocalId` INTEGER NOT NULL, `priceType` TEXT NOT NULL, `label` TEXT, `price` TEXT, `image` TEXT, FOREIGN KEY(`addonLocalId`) REFERENCES `AddonEntity`(`addonLocalId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "addonOptionLocalId",
            "columnName": "addonOptionLocalId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "addonLocalId",
            "columnName": "addonLocalId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priceType",
            "columnName": "priceType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "label",
            "columnName": "label",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "price",
            "columnName": "price",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "addonOptionLocalId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_AddonOptionEntity_addonLocalId",
            "unique": false,
            "columnNames": [
              "addonLocalId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_AddonOptionEntity_addonLocalId` ON `${TABLE_NAME}` (`addonLocalId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AddonEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "addonLocalId"
            ],
            "referencedColumns": [
              "addonLocalId"
            ]
          }
        ]
      },
      {
        "tableName": "Coupons",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `localSiteId` INTEGER NOT NULL, `code` TEXT, `amount` TEXT, `dateCreated` TEXT, `dateCreatedGmt` TEXT, `dateModified` TEXT, `dateModifiedGmt` TEXT, `discountType` TEXT, `description` TEXT, `dateExpires` TEXT, `dateExpiresGmt` TEXT, `usageCount` INTEGER, `isForIndividualUse` INTEGER, `usageLimit` INTEGER, `usageLimitPerUser` INTEGER, `limitUsageToXItems` INTEGER, `isShippingFree` INTEGER, `areSaleItemsExcluded` INTEGER, `minimumAmount` TEXT, `maximumAmount` TEXT, `includedProductIds` TEXT, `excludedProductIds` TEXT, `includedCategoryIds` TEXT, `excludedCategoryIds` TEXT, PRIMARY KEY(`id`, `localSiteId`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "localSiteId",
            "columnName": "localSiteId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "code",
            "columnName": "code",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateCreated",
            "columnName": "dateCreated",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateCreatedGmt",
            "columnName": "dateCreatedGmt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateModified",
            "columnName": "dateModified",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateModifiedGmt",
            "columnName": "dateModifiedGmt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "discountType",
            "columnName": "discountType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateExpires",
            "columnName": "dateExpires",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateExpiresGmt",
            "columnName": "dateExpiresGmt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "usageCount",
            "columnName": "usageCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isForIndividualUse",
            "columnName": "isForIndividualUse",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "usageLimit",
            "columnName": "usageLimit",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "usageLimitPerUser",
            "columnName": "usageLimitPerUser",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "limitUsageToXItems",
            "columnName": "limitUsageToXItems",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isShippingFree",
            "columnName": "isShippingFree",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "areSaleItemsExcluded",
            "columnName": "areSaleItemsExcluded",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "minimumAmount",
            "columnName": "minimumAmount",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "maximumAmount",
            "columnName": "maximumAmount",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "includedProductIds",
            "columnName": "includedProductIds",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "excludedProductIds",
            "columnName": "excludedProductIds",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "includedCategoryIds",
            "columnName": "includedCategoryIds",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "excludedCategoryIds",
            "columnName": "excludedCategoryIds",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id",
            "localSiteId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CouponEmails",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`couponId` INTEGER NOT NULL, `localSiteId` INTEGER NOT NULL, `email` TEXT NOT NULL, PRIMARY KEY(`couponId`, `localSiteId`, `email`), FOREIGN KEY(`couponId`, `localSiteId`) REFERENCES `Coupons`(`id`, `localSiteId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "couponId",
            "columnName": "couponId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "localSiteId",
            "columnName": "localSiteId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "couponId",
            "localSiteId",
            "email"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "Coupons",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "couponId",
              "localSiteId"
            ],
            "referencedColumns": [
              "id",
              "localSiteId"
            ]
          }
        ]
      },
      {
        "tableName": "GlobalAddonGroupEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`globalGroupLocalId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `restrictedCategoriesIds` TEXT NOT NULL, `localSiteId` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "globalGroupLocalId",
            "columnName": "globalGroupLocalId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "restrictedCategoriesIds",
            "columnName": "restrictedCategoriesIds",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "localSiteId",
            "columnName": "localSiteId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "globalGroupLocalId"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "OrderNotes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`localSiteId` INTEGER NOT NULL, `noteId` INTEGER NOT NULL, `orderId` INTEGER NOT NULL, `dateCreated` TEXT, `note` TEXT, `author` TEXT, `isSystemNote` INTEGER NOT NULL, `isCustomerNote` INTEGER NOT NULL, PRIMARY KEY(`localSiteId`, `noteId`))",
        "fields": [
          {
            "fieldPath": "localSiteId",
            "columnName": "localSiteId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "noteId",
            "columnName": "noteId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "orderId",
            "columnName": "orderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateCreated",
            "columnName": "dateCreated",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "note",
            "columnName": "note",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isSystemNote",
            "columnName": "isSystemNote",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isCustomerNote",
            "columnName": "isCustomerNote",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "localSiteId",
            "noteId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "OrderEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`localSiteId` INTEGER NOT NULL, `orderId` INTEGER NOT NULL, `number` TEXT NOT NULL, `status` TEXT NOT NULL, `currency` TEXT NOT NULL, `orderKey` TEXT NOT NULL, `dateCreated` TEXT NOT NULL, `dateModified` TEXT NOT NULL, `total` TEXT NOT NULL, `totalTax` TEXT NOT NULL, `shippingTotal` TEXT NOT NULL, `paymentMethod` TEXT NOT NULL, `paymentMethodTitle` TEXT NOT NULL, `datePaid` TEXT NOT NULL, `pricesIncludeTax` INTEGER NOT NULL, `customerNote` TEXT NOT NULL, `discountTotal` TEXT NOT NULL, `discountCodes` TEXT NOT NULL, `refundTotal` TEXT NOT NULL, `billingFirstName` TEXT NOT NULL, `billingLastName` TEXT NOT NULL, `billingCompany` TEXT NOT NULL, `billingAddress1` TEXT NOT NULL, `billingAddress2` TEXT NOT NULL, `billingCity` TEXT NOT NULL, `billingState` TEXT NOT NULL, `billingPostcode` TEXT NOT NULL, `billingCountry` TEXT NOT NULL, `billingEmail` TEXT NOT NULL, `billingPhone` TEXT NOT NULL, `shippingFirstName` TEXT NOT NULL, `shippingLastName` TEXT NOT NULL, `shippingCompany` TEXT NOT NULL, `shippingAddress1` TEXT NOT NULL, `shippingAddress2` TEXT NOT NULL, `shippingCity` TEXT NOT NULL, `shippingState` TEXT NOT NULL, `shippingPostcode` TEXT NOT NULL, `shippingCountry` TEXT NOT NULL, `shippingPhone` TEXT NOT NULL, `lineItems` TEXT NOT NULL, `shippingLines` TEXT NOT NULL, `feeLines` TEXT NOT NULL, `taxLines` TEXT NOT NULL, `couponLines` TEXT NOT NULL DEFAULT '', `metaData` TEXT NOT NULL, `paymentUrl` TEXT NOT NULL DEFAULT '', `isEditable` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`localSiteId`, `orderId`))",
        "fields": [
          {
            "fieldPath": "localSiteId",
            "columnName": "localSiteId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "orderId",
            "columnName": "orderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "number",
            "columnName": "number",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "orderKey",
            "columnName": "orderKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dateCreated",
            "columnName": "dateCreated",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dateModified",
            "columnName": "dateModified",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "total",
            "columnName": "total",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "totalTax",
            "columnName": "totalTax",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shippingTotal",
            "columnName": "shippingTotal",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentMethod",
            "columnName": "paymentMethod",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentMethodTitle",
            "columnName": "paymentMethodTitle",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "datePaid",
            "columnName": "datePaid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pricesIncludeTax",
            "columnName": "pricesIncludeTax",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customerNote",
            "columnName": "customerNote",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "discountTotal",
            "columnName": "discountTotal",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "discountCodes",
            "columnName": "discountCodes",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "refundTotal",
            "columnName": "refundTotal",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "billingFirstName",
            "columnName": "billingFirstName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "billingLastName",
            "columnName": "billingLastName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "billingCompany",
            "columnName": "billingCompany",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "billingAddress1",
            "columnName": "billingAddress1",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "billingAddress2",
            "columnName": "billingAddress2",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "billingCity",
            "columnName": "billingCity",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "billingState",
            "columnName": "billingState",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "billingPostcode",
            "columnName": "billingPostcode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "billingCountry",
            "columnName": "billingCountry",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "billingEmail",
            "columnName": "billingEmail",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "billingPhone",
            "columnName": "billingPhone",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shippingFirstName",
            "columnName": "shippingFirstName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shippingLastName",
            "columnName": "shippingLastName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shippingCompany",
            "columnName": "shippingCompany",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shippingAddress1",
            "columnName": "shippingAddress1",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shippingAddress2",
            "columnName": "shippingAddress2",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shippingCity",
            "columnName": "shippingCity",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shippingState",
            "columnName": "shippingState",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shippingPostcode",
            "columnName": "shippingPostcode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shippingCountry",
            "columnName": "shippingCountry",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shippingPhone",
            "columnName": "shippingPhone",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lineItems",
            "columnName": "lineItems",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shippingLines",
            "columnName": "shippingLines",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "feeLines",
            "columnName": "feeLines",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "taxLines",
            "columnName": "taxLines",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "couponLines",
            "columnName": "couponLines",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "''"
          },
          {
            "fieldPath": "metaData",
            "columnName": "metaData",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentUrl",
            "columnName": "paymentUrl",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "''"
          },
          {
            "fieldPath": "isEditable",
            "columnName": "isEditable",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "localSiteId",
            "orderId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_OrderEntity_localSiteId_orderId",
            "unique": false,
            "columnNames": [
              "localSiteId",
              "orderId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_OrderEntity_localSiteId_orderId` ON `${TABLE_NAME}` (`localSiteId`, `orderId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "OrderMetaData",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`localSiteId` INTEGER NOT NULL, `id` INTEGER NOT NULL, `orderId` INTEGER NOT NULL, `key` TEXT NOT NULL, `value` TEXT NOT NULL, `isDisplayable` INTEGER NOT NULL DEFAULT 1, PRIMARY KEY(`localSiteId`, `orderId`, `id`), FOREIGN KEY(`localSiteId`, `orderId`) REFERENCES `OrderEntity`(`localSiteId`, `orderId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "localSiteId",
            "columnName": "localSiteId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "orderId",
            "columnName": "orderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "value",
            "columnName": "value",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isDisplayable",
            "columnName": "isDisplayable",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "1"
          }
        ],
        "primaryKey": {
          "columnNames": [
            "localSiteId",
            "orderId",
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_OrderMetaData_localSiteId_orderId",
            "unique": false,
            "columnNames": [
              "localSiteId",
              "orderId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_OrderMetaData_localSiteId_orderId` ON `${TABLE_NAME}` (`localSiteId`, `orderId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "OrderEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "localSiteId",
              "orderId"
            ],
            "referencedColumns": [
              "localSiteId",
              "orderId"
            ]
          }
        ]
      },
      {
        "tableName": "InboxNotes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`localId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `remoteId` INTEGER NOT NULL, `localSiteId` INTEGER NOT NULL, `name` TEXT NOT NULL, `title` TEXT NOT NULL, `content` TEXT NOT NULL, `dateCreated` TEXT NOT NULL, `status` TEXT NOT NULL, `source` TEXT, `type` TEXT, `dateReminder` TEXT)",
        "fields": [
          {
            "fieldPath": "localId",
            "columnName": "localId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "remoteId",
            "columnName": "remoteId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "localSiteId",
            "columnName": "localSiteId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dateCreated",
            "columnName": "dateCreated",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "source",
            "columnName": "source",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dateReminder",
            "columnName": "dateReminder",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "localId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_InboxNotes_remoteId_localSiteId",
            "unique": true,
            "columnNames": [
              "remoteId",
              "localSiteId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_InboxNotes_remoteId_localSiteId` ON `${TABLE_NAME}` (`remoteId`, `localSiteId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "InboxNoteActions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`remoteId` INTEGER NOT NULL, `inboxNoteLocalId` INTEGER NOT NULL, `localSiteId` INTEGER NOT NULL, `name` TEXT NOT NULL, `label` TEXT NOT NULL, `url` TEXT NOT NULL, `query` TEXT, `status` TEXT, `primary` INTEGER NOT NULL, `actionedText` TEXT, PRIMARY KEY(`remoteId`, `inboxNoteLocalId`), FOREIGN KEY(`inboxNoteLocalId`) REFERENCES `InboxNotes`(`localId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "remoteId",
            "columnName": "remoteId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "inboxNoteLocalId",
            "columnName": "inboxNoteLocalId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "localSiteId",
            "columnName": "localSiteId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "label",
            "columnName": "label",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "query",
            "columnName": "query",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "primary",
            "columnName": "primary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actionedText",
            "columnName": "actionedText",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "remoteId",
            "inboxNoteLocalId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_InboxNoteActions_inboxNoteLocalId",
            "unique": false,
            "columnNames": [
              "inboxNoteLocalId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_InboxNoteActions_inboxNoteLocalId` ON `${TABLE_NAME}` (`inboxNoteLocalId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "InboxNotes",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "inboxNoteLocalId"
            ],
            "referencedColumns": [
              "localId"
            ]
          }
        ]
      },
      {
        "tableName": "TopPerformerProducts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`localSiteId` INTEGER NOT NULL, `datePeriod` TEXT NOT NULL, `productId` INTEGER NOT NULL, `name` TEXT NOT NULL, `imageUrl` TEXT, `quantity` INTEGER NOT NULL, `currency` TEXT NOT NULL, `total` REAL NOT NULL, `millisSinceLastUpdated` INTEGER NOT NULL, PRIMARY KEY(`datePeriod`, `productId`, `localSiteId`))",
        "fields": [
          {
            "fieldPath": "localSiteId",
            "columnName": "localSiteId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "datePeriod",
            "columnName": "datePeriod",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "total",
            "columnName": "total",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "millisSinceLastUpdated",
            "columnName": "millisSinceLastUpdated",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "datePeriod",
            "productId",
            "localSiteId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '6d6c9173ad3574359b4e0f4788c9541e')"
    ]
  }
}