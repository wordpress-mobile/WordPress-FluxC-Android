pluginManagement {
    gradle.ext.kotlinVersion = '1.4.10'
    gradle.ext.agpVersion = '4.2.2'

    plugins {
        id "com.gradle.enterprise" version "3.6.4"
        id "org.jetbrains.kotlin.android" version gradle.ext.kotlinVersion
        id "org.jetbrains.kotlin.android.extensions" version gradle.ext.kotlinVersion
        id "org.jetbrains.kotlin.jvm" version gradle.ext.kotlinVersion
        id "org.jetbrains.kotlin.kapt" version gradle.ext.kotlinVersion
        id "com.android.application" version gradle.ext.agpVersion
        id "com.android.library" version gradle.ext.agpVersion
        id "com.automattic.android.publish-to-s3" version "0.6.1"
    }
    repositories {
        maven {
            url 'https://a8c-libs.s3.amazonaws.com/android' 
            content {
                includeGroup "com.automattic.android"
                includeGroup "com.automattic.android.publish-to-s3"
            }
        }
        gradlePluginPortal()
        google()
        jcenter()
    }
    resolutionStrategy {
        eachPlugin {
            // TODO: Remove this as soon as fetchstyle starts supporting Plugin Marker Artifacts
            if (requested.id.id == "com.automattic.android.fetchstyle") {
                useModule("com.automattic.android:fetchstyle:1.1")
            }
            // TODO: Remove this as soon as configure starts supporting Plugin Marker Artifacts
            if (requested.id.id == "com.automattic.android.configure") {
                useModule("com.automattic.android:configure:0.6.1")
            }
        }
    }
}

include ':fluxc',
        ':fluxc-processor',
        ':fluxc-annotations',
        ':plugins:woocommerce',
        ':example',
        ':instaflux',
        ':tests:api'

// Build cache is only enabled for CI, at least for now
if (System.getenv().containsKey("CI")) {
    buildCache {
        remote(HttpBuildCache) {
            url = "http://10.0.2.215:5071/cache/"
            allowUntrustedServer = true
            allowInsecureProtocol = true
            push = true
        }
    }

    // Always run Gradle scan on CI builds
    gradleEnterprise {
        buildScan {
            termsOfServiceUrl = 'https://gradle.com/terms-of-service'
            termsOfServiceAgree = 'yes'
            tag 'CI'
            publishAlways()
            // Otherwise CI might shut down before it's uploaded
            uploadInBackground = false
        }
    }
}
