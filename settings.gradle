pluginManagement {
    repositories {
        exclusiveContent {
            forRepository {
                maven {
                    url = uri("https://a8c-libs.s3.amazonaws.com/android")
                }
            }
            filter {
                includeGroup "com.automattic.android"
                includeGroup "com.automattic.android.configure"
                includeGroup "com.automattic.android.fetchstyle"
                includeGroup "com.automattic.android.publish-to-s3"
            }
        }
        gradlePluginPortal()
        google()
    }
}

plugins {
    id 'com.gradle.enterprise' version '3.9'
    id 'com.gradle.common-custom-user-data-gradle-plugin' version '1.6.5'
}

def catalogVersion = "1.3.0"
dependencyResolutionManagement {
    repositories {
        exclusiveContent {
            forRepository {
                maven {
                    url = uri("https://a8c-libs.s3.amazonaws.com/android")
                }
            }
            filter {
                includeModule("com.automattic", "dependency-catalog")
            }
        }
    }
    versionCatalogs {
        sharedLibs {
            from("com.automattic:dependency-catalog:$catalogVersion")

            version("androidx-annotation", "1.0.2")
            version("androidx-appcompat", "1.0.2")
            version("androidx-constraintlayout", "1.1.3")
            version("androidx-recyclerview", "1.0.0")
            version("apache-commons-text", "1.1")
            version("facebook-flipper", "0.51.0")
            version("facebook-soloader", "0.9.0")
            version("kotlinx-coroutines", "1.3.9")
            version("mockito", "3.3.3")
            version("wordpress-utils", "110-13b4f06680ed8c145cbd09d63c4998dfe8b3b9de")
        }
    }
}

gradleEnterprise {
    server = "https://gradle.a8c.com"
    allowUntrustedServer = false
    buildScan {
        def disableGE = System.getenv("GRADLE_ENTERPRISE_ANALYTICS_DISABLE")
        if (!(disableGE == "1" || disableGE == "true")) {
            publishAlways()
        }
        capture {
            taskInputFiles = true
        }
        uploadInBackground = System.getenv("CI") == null

        if (!System.getenv().containsKey("CI")) {
            // Obfuscate personal data unless it's a CI build
            obfuscation {
                username { username -> System.getenv("GRADLE_ENTERPRISE_ANALYTICS_USERNAME") ?: username }
                hostname { hostname -> System.getenv("GRADLE_ENTERPRISE_ANALYTICS_HOSTNAME") ?: hostname }
                ipAddresses { addresses -> addresses.collect { address -> "0.0.0.0"} }
            }
        }
    }
}

rootProject.name = 'FluxC'

include ':fluxc',
        ':fluxc-processor',
        ':fluxc-annotations',
        ':plugins:woocommerce',
        ':example',
        ':tests:api'
