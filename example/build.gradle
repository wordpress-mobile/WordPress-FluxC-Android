buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "org.wordpress.android.fluxc.example"
        minSdkVersion 15
        // Keep the targetSdkVersion 22 so we don't need to grant runtime permissions to the tests and the example app
        // An alternative would be granting the permissions via adb before running the test, like here:
        // https://afterecho.uk/blog/granting-marshmallow-permissions-for-testing-flavoured-builds.html
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        warning 'InvalidPackage'
        disable 'ExpiredTargetSdkVersion'
    }

    testOptions {
        // Don't use the test orchestrator yet, some of our connected testsare sharing state to reduce network
        // pressure on the API (authentication/fetch profile/fetch sites).
        // Uncomment the next line to enable the Orchestrator.
        // execution 'ANDROID_TEST_ORCHESTRATOR'

        unitTests.all {
            if (project.hasProperty('testsMaxHeapSize')) {
                // maxHeapSize for tests is not limited unless we give an explicit value
                // See https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.Test.html
                maxHeapSize project.properties.get('testsMaxHeapSize')
            }
        }
    }
}

android.buildTypes.all { buildType ->
    // Add properties named "wp.xxx" to our BuildConfig
    project.properties.any { property ->
        if (property.key.toLowerCase().startsWith("wp.")) {
            buildType.buildConfigField "String", property.key.replace("wp.", "").replace(".", "_").toUpperCase(),
                    "\"${property.value}\""
        }
    }

    // Load test properties and add them to BuildConfig
    Properties testProperties = new Properties()
    File testFile = file("tests.properties")
    if (testFile.exists()) {
        testProperties.load(new InputStreamReader(new FileInputStream(testFile), "utf-8"))
    } else {
        // Load defaults
        println("WARNING: you're using the example example/tests.properties-example file - tests won't pass")
        testProperties.load(new InputStreamReader(new FileInputStream(file("tests.properties-example")), "utf-8"))
    }
    testProperties.any { property ->
        buildType.buildConfigField "String", property.key.replace(".", "_").toUpperCase(), "\"${property.value}\""
    }
}

dependencies {
    implementation project(':fluxc')
    implementation project(':plugins:woocommerce')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.annotation:annotation:1.0.2'
    implementation "androidx.arch.core:core-common:$arch_core_version"
    implementation "androidx.arch.core:core-runtime:$arch_core_version"
    implementation 'org.apache.commons:commons-lang3:3.7'

    // WordPress libs
    implementation('org.wordpress:utils:1.20.0') {
        // Using official volley package
        exclude group: "com.mcxiaoke.volley"
        exclude group: "com.android.support"
    }

    implementation 'com.google.code.gson:gson:2.8.5'

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation 'org.robolectric:robolectric:3.6.1'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation "androidx.arch.core:core-testing:$arch_core_version"

    androidTestImplementation 'org.mockito:mockito-android:3.3.3'
    androidTestImplementation 'org.apache.commons:commons-lang3:3.7'
    androidTestImplementation "androidx.arch.core:core-testing:$arch_core_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    androidTestCompileOnly 'org.glassfish:javax.annotation:10.0-b28'
    // Test orchestrator
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestUtil 'androidx.test:orchestrator:1.2.0'

    // Debug dependencies
    debugImplementation 'com.facebook.stetho:stetho:1.5.0'
    debugImplementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"
}
